# Copyright 2024 Dynamic Solutions Sp. z o.o. sp.k.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

delivery:
  _service-name_:
    # -- number of replicas, defaults to 1
    replicas: 1
    # -- map of incoming channels
    incoming:
      # -- example incomming channel with defined namespace and topic
      _incoming-channel-name_:
        namespace: outboxes
        topic: pages
    # -- map of delivery outputs
    outputs:
      _output-name_:
        service:
          containerRef:
            # -- corresponds to container name in `containers` section
            name: _container-name_
          # -- port on which Kubernetes service is listening for traffic for this Delivery Service
          port: 80
          # -- name of the port in the container
          targetPort: http
        ingress:
          # -- optional, set `host` to enable ingress
          host: my-domain.com
          # -- optional, defaults to "/"
          path: /my-path
          # -- additional annotations for ingress
          annotations: {}
          tls:
            # -- optional, set to enable TLS, secret must be created in the same namespace
            secretName: tls-secret
    containers:
      _container-name_:
        # -- image repository and tag
        image: <image-repository>:<image-tag>
        # -- ports exposed by the container
        ports:
          - name: http
            containerPort: 8080
        # -- additional environment variables
        env: []
        data:
          # -- repository volume mount path, it is intended to enable sharing data between containers within Delivery Service pod
          repositoryMountPath: /application/store/resources
        # -- configMap mounted as volume under mountPath, used e.g. to mount nginx configuration
        configs:
          - mountPath: /etc/nginx/conf.d
            configMapName: generated-site-nginx-config
        monitoring:
          # -- (string) path for the monitoring endpoint, must be set to enable monitoring for the container
          path: /q/metrics
          # -- optional, defaults to `8080`
          port: 8080
          # -- optional, defaults to `10s`
          interval: 10s
          # -- optional, defaults to `10s`
          scrapeTimeout: 10s
        # -- overrides resources for the container
        resources:
        probes: 
          # -- disables probes, by default enabled
          disabled: true
          # -- overrides default livenessProbe settings see tests for reference
          livenessOverride: {}
          # -- overrides default readinessProbe settings see tests for reference
          readinessOverride: {}
          # -- overrides default startupProbe settings see tests for reference
          startupOverride: {}
    data:
      # -- defines size of the repository volume
      repositorySize: 1Gi
      # -- defines size of the metadata volume
      metadataSize: 1Gi
    affinity:
      podAntiAffinity:
        # -- enables pod anti-affinity, disabled by default
        enabled: false
    pdb:
      # -- (number) min availabiliyty setting for the Delivery Service PodDisruptionBudget which is set to number of replicas by default
      minAvailable: 1
    # -- nodeSelector settings (key -> value)
    nodeSelector: {}
