# Copyright 2024 Dynamic Solutions Sp. z o.o. sp.k.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- range $name, $delivery := .Values.delivery }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "streamx.component.fullname" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) }}
  labels:
    {{- include "streamx.component.labels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 4 }}
spec:
  replicas: {{ if hasKey $delivery "replicas" }}{{ $delivery.replicas }}{{ else }}1{{ end }}
  selector:
    matchLabels:
      {{- if $delivery.labelsOverride }}
{{ toYaml $delivery.labelsOverride | indent 6 }}
      {{- else }}
      {{- include "streamx.component.selectorLabels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 6 }}
      {{- end }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- if $delivery.labelsOverride }}
{{ toYaml $delivery.labelsOverride | indent 8 }}
        {{- else }}
        {{- include "streamx.component.labels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets: {{- $.Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      {{- if $delivery.terminationGracePeriod }}
      terminationGracePeriodSeconds:  {{ $delivery.terminationGracePeriod }}
      {{- end }}
      {{- if $delivery.nodeSelector }}
      nodeSelector: {{ $delivery.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if (($delivery.affinity).podAntiAffinity).enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - {{ $.Release.Name }}
              - key: app.kubernetes.io/component
                operator: In
                values:
                - delivery-{{ $name }}
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "streamx.name" $ }}
            topologyKey: "kubernetes.io/hostname"
      {{- end }}
      containers:
        {{- range $containerName, $container := $delivery.containers }}
        - name: {{ $containerName }}
          image: {{ $container.image }}
          imagePullPolicy: {{ $container.imagePullPolicy }}
          ports:
            {{- with $container.monitoring }}
            - name: {{ printf "metrics-%s" $containerName | trunc 15 | trimSuffix "-" }}
              containerPort: {{ .port | default 8080 }}
              protocol: TCP
            {{- end }}
            {{- range $port := $container.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol | default "TCP" }}
            {{- end }}
          {{- if $container.command }}
          command:
            {{- range $cmd := $container.command }}
            - {{ $cmd | quote }}
            {{- end }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $arg := $container.args }}
            - {{ $arg | quote}}
            {{- end }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STREAMX_TENANT
              value: {{ include "streamx.tenant" $ }}
            {{- include "streamx.pulsarEnvs" $ | nindent 12 }}
            {{- include "streamx.component.quasarEnvs" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 12 }}
            - name: PLUGIN_STORE_TENANT
              value: {{ include "streamx.tenant" $ }}
            {{- range $key, $channel := $delivery.incoming }}
            - name: MP_MESSAGING_INCOMING_{{ $key | upper }}_TOPIC
              value: {{ include "streamx.channelTopic" (dict "channel" $channel "context" $) }}
            - name: MP_MESSAGING_INCOMING_{{ $key | upper }}_SUBSCRIPTIONNAME
              value: "$(POD_NAME)-{{ $containerName }}-{{ $key }}"
            {{- end }}
            {{- with $container.data }}
            {{- if .repositoryMountPath }}
            - name: REPOSITORY_RESOURCE_ROOT_DIRECTORY
              value: {{ .repositoryMountPath }}
            {{- end }}
            {{- if .metadataMountPath }}
            - name: REPOSITORY_METADATA_ROOT_DIRECTORY # FixMe: to be checked if this is needed in StreamX
              value: {{ .metadataMountPath }}
            {{- end }}
            {{- end }}
            {{- if $container.env }}
{{ toYaml $container.env | indent 12 }}
            {{- end }}
          volumeMounts:
            {{- with $container.data }}
            {{- if .repositoryMountPath }}
            - name: repository
              mountPath: {{ .repositoryMountPath }}
            {{- end }}
            {{- if .metadataMountPath }}
            - name: metadata
              mountPath: {{ .metadataMountPath }}
            {{- end }}
            {{- end }}
            {{- range $idx, $mount:= $container.configs }}
            - name: config-{{ $containerName }}-{{ $idx }}
              mountPath: {{ $mount.mountPath }}
            {{- end }}
          {{- if $container.livenessProbe }}
          livenessProbe:
{{ toYaml $container.livenessProbe | indent 12 }}
          {{- end }}
          {{- if $container.readinessProbe }}
          readinessProbe:
{{ toYaml $container.readinessProbe | indent 12 }}
          {{- end }}
          {{- if $container.startupProbe }}
          startupProbe:
{{ toYaml $container.startupProbe | indent 12 }}
          {{- end }}
          {{- if $container.resources }}          
          resources:
{{ toYaml $container.resources | indent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: repository
          {{- if ($delivery.data).repositorySize }}
          emptyDir:
            sizeLimit: {{ $delivery.data.repositorySize }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: metadata
          {{- if ($delivery.data).metadataSize }}
          emptyDir:
            sizeLimit: {{ $delivery.data.metadataSize }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- range $containerName, $container := $delivery.containers }}
        {{- range $idx, $volume := $container.configs }}
        - name: config-{{ $containerName }}-{{ $idx }}
          configMap:
            name: {{ $volume.configMapName }}
        {{- end }}
        {{- end }}
---
{{- end }}
