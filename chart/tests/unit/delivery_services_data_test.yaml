# Copyright 2024 Dynamic Solutions Sp. z o.o. sp.k.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

suite: test delivery services data

tests:
  # @Test
  - it: repoistory and metadata volumes are always created as emptyDir (bound to pod's lifecycle)
    template: templates/delivery/delivery-deployment.yaml
    set:
      delivery:
        service1:
          replicas: 1
    asserts:
      - equal:
          path: spec.template.spec.volumes[0].name
          value: repository
      - equal:
          path: spec.template.spec.volumes[0].emptyDir
          value: {}
      - equal:
          path: spec.template.spec.volumes[1].name
          value: metadata
      - equal:
          path: spec.template.spec.volumes[1].emptyDir
          value: {}
  # @Test
  - it: when delivery service container configures repository mount path then repoistory volume is mounted and env configured
    template: templates/delivery/delivery-deployment.yaml
    set:
      delivery:
        service1:
          containers:
            test-container:
              image:
                repository: test/repository
              data:
                repositoryMountPath: /repository/path
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: repository
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /repository/path
