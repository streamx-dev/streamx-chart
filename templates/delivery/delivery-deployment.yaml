{{- range $name, $delivery := .Values.delivery }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "streamx.component.fullname" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) }}
  labels:
    {{- include "streamx.component.labels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 4 }}
spec:
  replicas: {{ if hasKey $delivery "replicas" }}{{ $delivery.replicas }}{{ else }}1{{ end }}
  selector:
    matchLabels:
      {{- if $delivery.labelsOverride }}
{{ toYaml $delivery.labelsOverride | indent 6 }}
      {{- else }}
      {{- include "streamx.component.selectorLabels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 6 }}
      {{- end }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- if $delivery.labelsOverride }}
{{ toYaml $delivery.labelsOverride | indent 8 }}
        {{- else }}
        {{- include "streamx.component.labels" (dict "componentName" (printf "%s-%s" "delivery" $name ) "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets: {{- $.Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      {{- if $delivery.terminationGracePeriod }}
      terminationGracePeriodSeconds:  {{ $delivery.terminationGracePeriod }}
      {{- end }}
      {{- if $delivery.nodeSelector }}
      nodeSelector: {{ $delivery.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if (($delivery.affinity).podAntiAffinity).enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - {{ $.Release.Name }}
              - key: app.kubernetes.io/component
                operator: In
                values:
                - delivery-{{ $name }}
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "streamx.name" $ }}
            topologyKey: "kubernetes.io/hostname"
      {{- end }}
      containers:
        {{- range $container := $delivery.containers }}
        - name: {{ $container.name }}
          image: {{ $container.image }}
          imagePullPolicy: {{ $container.imagePullPolicy }}
          ports:
            {{- with $container.monitoring }}
            - name: {{ printf "metrics-%s" $container.name | trunc 15 | trimSuffix "-" }}
              containerPort: {{ .port | default 8080 }}
              protocol: TCP
            {{- end }}
            {{- range $port := $container.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol | default "TCP" }}
            {{- end }}
          {{- if $container.command }}
          command:
            {{- range $cmd := $container.command }}
            - {{ $cmd | quote }}
            {{- end }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $arg := $container.args }}
            - {{ $arg | quote}}
            {{- end }}
          {{- end }}
          env:
            {{- range $index, $value := $delivery.inputs }}
            - name: PULSAR_OUTBOX_TOPIC #FixMe in StreamX to DELIVERY_{{ $index }}__INPUT
              value: {{ include "streamx.pulsarTopic" (dict "namespaceAndTopic" $value "context" $) }}
            - name: PULSAR_OUTBOX_SUBSCRIPTION_NAME #FixMe in StreamX to DELIVERY_{{ $index }}__INPUT_SUBSCRIPTION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name # FixMe the value should be unique per each input
            {{- end }}
            - name: PULSAR_ADMIN_SERVICEURL
              value: {{ $.Values.pulsar.webServiceUrl }}
            - name: PULSAR_CLIENT_SERVICEURL
              value: {{ $.Values.pulsar.serviceUrl }}
            - name: QUASAR_MESSAGING_DATASTORE_PULSAR_SERVICEURL
              value: {{ $.Values.pulsar.serviceUrl }}
            - name: APPLICATION_MODE # FixMe: to be removed in StreamX
              value: sync
            {{- with $container.data }}
            {{- if .repositoryMountPath }}
            - name: REPOSITORY_RESOURCE_ROOT_DIRECTORY # FixMe: change to REPOSITORY_ROOT_PATH in StreamX
              value: {{ .repositoryMountPath }}
            {{- end }}
            {{- if .metadataMountPath }}
            - name: REPOSITORY_METADATA_ROOT_DIRECTORY # FixMe: change to METADATA_ROOT_PATH in StreamX
              value: {{ .metadataMountPath }}
            {{- end }}
            {{- end }}
            {{- if $container.env }}
{{ toYaml $container.env | indent 12 }}
            {{- end }}
          volumeMounts:
            {{- with $container.data }}
            {{- if .repositoryMountPath }}
            - name: repository
              mountPath: {{ .repositoryMountPath }}
            {{- end }}
            {{- if .metadataMountPath }}
            - name: metadata
              mountPath: {{ .metadataMountPath }}
            {{- end }}
            {{- end }}
            {{- range $idx, $mount:= $container.configs }}
            - name: config-{{ $container.name }}-{{ $idx }}
              mountPath: {{ $mount.mountPath }}
            {{- end }}
          {{- if $container.livenessProbe }}
          livenessProbe:
{{ toYaml $container.livenessProbe | indent 12 }}
          {{- end }}
          {{- if $container.readinessProbe }}
          readinessProbe:
{{ toYaml $container.readinessProbe | indent 12 }}
          {{- end }}
          {{- if $container.startupProbe }}
          startupProbe:
{{ toYaml $container.startupProbe | indent 12 }}
          {{- end }}
          {{- if $container.resources }}          
          resources:
{{ toYaml $container.resources | indent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: repository
          {{- if ($delivery.data).repositorySize }}
          emptyDir:
            sizeLimit: {{ $delivery.data.repositorySize }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: metadata
          {{- if ($delivery.data).metadataSize }}
          emptyDir:
            sizeLimit: {{ $delivery.data.metadataSize }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- range $container := $delivery.containers }}
        {{- range $idx, $volume := $container.configs }}
        - name: config-{{ $container.name }}-{{ $idx }}
          configMap:
            name: {{ $volume.configMapName }}
        {{- end }}
        {{- end }}
---
{{- end }}
